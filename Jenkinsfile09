pipeline{
    agent { node { label 'Agent01' }}
    stages{
        stage('Build'){
            agent{
                docker{
                    image 'maven:3-alpine'
                    label 'Agent01'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps{
              sh 'mvn clean install'
          }
        }
         stage ( 'create image' ) {
             agent { label 'Agent01' }
             steps{
                sh "docker build  -t   192.168.57.131:8000/java/helloworld:${BUILD_NUMBER} ."
                // sh "docker login -u docker -p 4321 192.168.57.131:5000"
                 sh "docker push 192.168.57.131:8000/java/helloworld:${BUILD_NUMBER}"
             }
         }
        
        stage('Test API'){
             steps {
              script {
                dir ('postman') {
                    try {
                        sh '/usr/local/bin/newman run openweathermap.postman_collection.json --reporters cli,junit --reporter-junit-export newman.xml'
                        currentBuild.result = "SUCCESS"
                        }
                    catch (exc) {
                        currentBuild.result = "UNSTABLE"
                        }
                    junit 'newman.xml'
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
              script {
                try {
                    sh 'mvn test'
                    currentBuild.result = "SUCCESS"
                    }
                catch (exc) {
                    currentBuild.result = "UNSTABLE"
                    }
                junit '**/target/surefire-reports/TEST*.xml'
                }
            }
        }
        
        
        stage('Docker Swarm'){
            steps {
               // sh 'docker service create --name helloapp -p 9999:8080 --replicas 2 192.168.57.131:8000/java/helloworld:${BUILD_NUMBER}'
                sh 'docker service update  --with-registry-auth --image 192.168.57.131:8000/java/helloworld:${BUILD_NUMBER} --update-parallelism 1 --update-delay 10s helloapp'
                sh 'docker ps --filter status=exited -q | xargs -r docker container rm'
            }
        }

        stage('JIRA') {
            agent { label 'Agent01' }
            steps {
              script {
                response = jiraAddComment site: 'jira' , idOrKey: 'TEST-4' ,  comment : "${JOB_NAME} => ${BUILD_NUMBER} - BUILD URL : ${BUILD_URL} => Status Job = ${currentBuild.currentResult}"
                jiraUploadAttachment file: 'Jenkinsfile', idOrKey: 'TEST-4', site: 'jira'
                
                }
            }
        }    
    }
}
