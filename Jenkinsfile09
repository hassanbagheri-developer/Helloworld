pipeline{
    agent { node { label 'Agent01' }}
    stages{
        // stage('Build'){
        //     agent{
        //         docker{
        //             image 'maven:3-alpine'
        //             // label 'my_slave01'
        //             args '-v /root/.m2:/root/.m2'
        //         }
        //     }
        //     steps{
        //       sh 'pwd'
        //       sh 'ls'
        //       sh 'ls /root/.m2'
        //       sh 'mvn clean install'
        //  //      stash includes: '**/*.war',name: 'app'
        //   }
        // }
        // stage ( 'create image' ) {
        //     steps{
        //         sh "docker build  -t   192.168.57.131:8000/java/helloworld:${BUILD_NUMBER} ."
        //         // sh "docker login -u docker -p 4321 192.168.57.131:5000"
        //         sh "docker push 192.168.57.131:8000/java/helloworld:${BUILD_NUMBER}"
        //     }
        // }
        
        stage('Test API'){
             steps {
              script {
                dir ('postman') {
                    try {
                        sh 'ip a'
                        sh 'pwd'
                        sh '/usr/local/bin/newman run openweathermap.postman_collection.json --reporters cli,junit --reporter-junit-export newman.xml'
//                        sh 'npm run api-test'
                        currentBuild.result = "SUCCESS"
                        }
                    catch (exc) {
                        currentBuild.result = "FAILURE"
                        }
                    junit 'newman.xml'
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
              sh 'whoami'
              script {
                try {
                    sh 'pwd'
                    sh 'mvn test'
                    currentBuild.result = "SUCCESS"
                    }
                catch (exc) {
                    currentBuild.result = "FAILURE"
                    }
                junit '**/target/surefire-reports/TEST*.xml'
                }
            }
        }

    //     stage('Deploy'){
    //     steps{
    //             sh 'docker ps -f name=helloapp -q | xargs --no-run-if-empty docker container stop'
    //             sh 'docker container ls -a -fname=helloapp -q | xargs -r docker container rm'
    //             sh "docker run -tid -p 9999:8080 --rm --name helloapp  192.168.57.131:8000/java/helloworld:${BUILD_NUMBER}"
    //     }
    // }
        
    }
}
